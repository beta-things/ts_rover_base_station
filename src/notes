INSTALLATION FROM SCRATCH 

//ros2 install 
https://docs.ros.org/en/humble/Installation/Ubuntu-Install-Debians.html

//install nav2
https://navigation.ros.org/getting_started/index.html

//filters required for laser filter module 
sudo apt install ros-humble-filters

//geographic messages and geographic lib required for sensor fusion (robot localization)
sudo apt install ros-humble-geographic-msgs
sudo apt install libgeographic-dev

//get repo
git clone https://github.com/beta-things/ts_rover_base_station.git 

//eport var for simulation
export MY_ROBOT=mpo_500
export MAP_NAME=neo_track1

//build 
//go to cloned repo's root folder
colcon build

//install gazebo for sims NOTE GAZEBO MAY CRASH OR TAKE FOREVER TO LOAD FIRST TRY> JUST WAIT
sudo apt install ros-humble-gazebo-ros-pkgs



//SIMULATION RUNN STUFF
ros2 launch neo_simulation2 simulation.launch.py
//or with lidar
ros2 launch neo_simulation2 simulation_lidar.launch.py


ros2 launch neo_nav2_bringup localization_simple.launch.py map:="/home/tch/ts_rover_base_station/src/neo_simulation2-humble/maps/neo_track1.yaml" use_sim_time:=true  params_file:="/home/tch/ts_rover_base_station/src/neo_simulation2-humble/configs/mpo_500/navigation_sim.yaml"

//VISCA CONTROLLER if used
ros2 run visca_controller cmd_vel_publisher

//or keyboard teleop
ros2 run teleop_twist_keyboard teleop_twist_keyboard

//start nav2 with straightline planner
ros2 launch neo_nav2_bringup navigation_neo.launch.py params_file:="/home/tch/ts_rover_base_station/src/neo_simulation2-humble/configs/mpo_500/navigation_sim.yaml"

//start MPC server 
ros2 run neo_mpc_planner2 mpc_optimization_server.py --ros-args --params-file /home/tch/ts_rover_base_station/src/neo_simulation2-humble/configs/mpo_500/navigation.yaml


//START RVIZ
ros2 launch neo_nav2_bringup rviz_launch.py


